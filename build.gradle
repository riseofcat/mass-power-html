//apply plugin: 'kotlin2js'
apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlinx-serialization'
//apply plugin: 'kotlin-dce-js' //(kotlin_version='1.1.4') //https://kotlinlang.org/docs/reference/javascript-dce.html

repositories {
	jcenter()
	maven { url "https://kotlin.bintray.com/kotlinx" }
	mavenCentral()
	maven {
		url "http://nexus.astraeus.nl/nexus/content/groups/public"
	}
	mavenLocal()
}

buildscript {
	if(false)ext.kotlinVersion = 'SPECIFY_KOTLIN_VERSION'//sets from gradle.properies in parent project
	repositories {
		jcenter()
		maven { url "https://kotlin.bintray.com/kotlinx" }
		maven {
			url "http://nexus.astraeus.nl/nexus/content/groups/public"
		}
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
	}
}

dependencies {
//    compile "perses.games:kudens:1.1.3"
	compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
	compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"//в html прописана ссылка на компилируемы js
	if(false) compile "org.jetbrains.kotlinx:kotlinx-io-js:0.0.10"//TODO umd js module
	expectedBy project(":server-common")
	if(false) compile "com.soywiz:korio:0.15.1"
}

task jarSources(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'source'
}

task genBuildParams(type: GenBuildParams)

artifacts {
	compile jarSources
}

compileKotlin2Js {
//	kotlinOptions.moduleKind = "amd"//другой тип js проекта. Возможно легче включать js зависимости
	kotlinOptions.metaInfo = true

	compileKotlin2Js.kotlinOptions.sourceMap = true
	compileKotlin2Js.kotlinOptions.outputFile = "${projectDir}/web/js/generated/game.js"
	compileKotlin2Js.kotlinOptions.suppressWarnings = true
	compileKotlin2Js.kotlinOptions.verbose = true
}

def outDir = "${buildDir}/kotlin2js/main/"
def webDir = "${projectDir}/web/"

jar {
	from sourceSets.main.allSource
	include "**/*.kt"

	from outDir
	include "**/*.js"

	manifest {
		attributes(
			"Kotlin-JS-Module-Name": "game"
		)
	}
}

jar.dependsOn(compileKotlin2Js)
compileKotlin2Js.dependsOn(genBuildParams)

compileKotlin2Js.doLast {
	configurations.compile.each {File file ->
		copy {
			includeEmptyDirs = false

			from zipTree(file.absolutePath)
			into "${projectDir}/web/js/kotlin"
			include {fileTreeElement ->
				def path = fileTreeElement.path
				path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
			}
		}
	}
}
kotlin {
	experimental {
		coroutines "enable"
	}
}
